#!/usr/bin/perl -w
# PPath
# Surya Saha    04/19/2010 02:24:30 PM 
# reading reports generated by SignalP (http://www.cbs.dtu.dk/services/SignalP-3.0/) for LAS proteins  
# and writing a Excel file for predicted signal peptides
# write a gff file for Artemis 


unless (@ARGV == 3){
	print "USAGE: $0 <SignalP txt output> <protein faa> <GFF>\n";
	exit;
}

use strict;
use warnings;

# Chk is glycine in 1 or 2 position
# params: seq, pos
sub mys_cand{
	if ((substr($_[0],$_[1]-1,1) eq 'G') || ((substr($_[0],$_[1],1) eq 'G'))){
		return 1;
	}
	else{
		return 0;
	}
}

my ($rec,@pnames,@prots,@preds,@gff,$i,$j,$k,$l,$ctr,@temp,@temp1,$YYctr,$YNctr,$Y1ctr,$Y2ctr);

unless(open(OUTXLS,">$ARGV[0].xls")){print "not able to open $ARGV[0].xls\n\n";exit;}
unless(open(OUTGFF,">$ARGV[0].gff")){print "not able to open $ARGV[0].gff\n\n";exit;}
unless(open(OUTCANDS,">$ARGV[0].myristolation.candidates.faa")){print "not able to open $ARGV[0].myristolation.candidates.faa\n\n";exit;}
unless(open(SPREP,$ARGV[0])){print "not able to open $ARGV[0]\n\n";exit;}
unless(open(INFAA,$ARGV[1])){print "not able to open $ARGV[1]\n\n";exit;}
chomp $ARGV[2];
unless(open(INGFF,$ARGV[2])){print "not able to open $ARGV[2]\n\n";exit;}


#reading in the fasta names into @pnames 
#>gi|254780122|ref|YP_003064535.1| hypothetical protein CLIBASIA_00005 [Candidatus Liberibacter asiaticus str. psy62]
#MGALKNHFHDEINENFYFHSHPNADPDISIEMQISENQRYLDEEISQCNAVVDVFKRSDSTILDKLDAMD
$ctr=0;
$i=-1;
while ($rec=<INFAA>){
	if ($rec=~ /^>/){# get name
		@temp = split(/\|/,$rec);
		chomp $temp[4];
		$pnames[$ctr][0]=$temp[1];
		$pnames[$ctr][1]=$temp[3];
		$temp[4]=~ s/ //;
		$temp[4]=~ s/ \[Candidatus Liberibacter asiaticus str\. psy62\]//;
		$pnames[$ctr++][2]=$temp[4];
		@temp=();
		$i++;# for seq ctr
		$prots[$i]='';
	}
	else{# get seq
		chomp $rec;
		$prots[$i]=$prots[$i].$rec;
	}
}
close(INFAA);

## SignalP-NN gram- predictions                                 	                # SignalP-HMM gram- predictions
## name                Cmax  pos ?  Ymax  pos ?  Smax  pos ?  Smean ?  D     ? 	# name      !  Cmax  pos ?  Sprob ?
#gi_254780122_ref_YP_  0.322  25 N  0.054  25 N  0.042   1 N  0.023 N  0.039 N	gi_254780122_ref_YP_003064535.1_  Q  0.000   0 N  0.000 N  
#gi_254780123_ref_YP_  0.197  13 N  0.116  33 N  0.781  28 N  0.162 N  0.139 N	gi_254780123_ref_YP_003064536.1_  Q  0.000  32 N  0.000 N  
#gi_254780124_ref_YP_  0.072  15 N  0.176  15 N  0.849   3 N  0.489 N  0.333 N	gi_254780124_ref_YP_003064537.1_  Q  0.000  17 N  0.000 N  
$ctr=0;
while ($rec=<SPREP>){
	if ($rec=~ /^\#/){next;}
	@temp = split(' ',$rec);
	chomp $temp[20];
	# using the D score for NN classification
	# The D-score is introduced in SignalP version 3.0 and is a simple average of the S-mean and Y-max score. The score shows superior discrimination performance 
	# of secretory and non-secretory proteins to that of the S-mean score which was used in SignalP version 1 and 2.
	# trimming col1 down to gi number
	@temp1 = split('_',$temp[0]);
	$preds[$ctr][0]=$temp1[1];#GI
	$preds[$ctr][1]=$temp[5];#Ymax pos
	$preds[$ctr][2]=$temp[13];#D bool
	$preds[$ctr][3]=$temp[15];#HMM S or Q
	$preds[$ctr++][4]=$temp[17];#HMM pos
	@temp=(); @temp1=();
}
close(SPREP);

# Reading in the GFF file
#NC_012985.2	RefSeq	gene	36	407	.	+	.	locus_tag=CLIBASIA_00005;db_xref=GeneID:8210255
#NC_012985.2	RefSeq	CDS	36	404	.	+	0	locus_tag=CLIBASIA_00005;transl_table=11;product=hypothetical protein;protein_id=YP_003064535.1;db_xref=GI:254780122;db_xref=GeneID:8210255;exon_number=1
#NC_012985.2	RefSeq	start_codon	36	38	.	+	0	locus_tag=CLIBASIA_00005;transl_table=11;product=hypothetical protein;protein_id=YP_003064535.1;db_xref=GI:254780122;db_xref=GeneID:8210255;exon_number=1
#NC_012985.2	RefSeq	stop_codon	405	407	.	+	0	locus_tag=CLIBASIA_00005;transl_table=11;product=hypothetical protein;protein_id=YP_003064535.1;db_xref=GI:254780122;db_xref=GeneID:8210255;exon_number=1
#NC_012985.2	RefSeq	gene	497	820	.	+	.	locus_tag=CLIBASIA_00010;db_xref=GeneID:8209098
#NC_012985.2	RefSeq	CDS	497	817	.	+	0	locus_tag=CLIBASIA_00010;transl_table=11;product=hypothetical protein;protein_id=YP_003064536.1;db_xref=GI:254780123;db_xref=GeneID:8209098;exon_number=1
$ctr=0;
while ($rec=<INGFF>){
	if ($rec=~ /^\#/){next;}
	@temp = split("\t",$rec);
	chomp $temp[8];
	if ($temp[2] eq 'CDS'){
		$gff[$ctr][0]=$temp[3];#start
		$gff[$ctr][1]=$temp[4];#end
		$gff[$ctr][2]=$temp[6];#strand, frame is not reported for mature peptides
		$gff[$ctr++][3]=$temp[8];#attributes
	}
	@temp=();
}
close(INGFF);

# Printing the XLS file
print OUTXLS "Product\tAcc\tGI\tNN\tHMM\n";
$ctr=0;
foreach $i (@preds){
	$j=$pnames[$ctr][1];
	$j=~ s/\.1//;
	print OUTXLS "$pnames[$ctr][2]\t$j\t$i->[0]\t$i->[2]\t";
	if ($i->[3] eq 'S'){print OUTXLS "Y\n";}
	elsif ($i->[3] eq 'Q'){print OUTXLS "N\n";}
	else {print STDERR 'broken here'; exit();}
	$ctr++;
}
close(OUTXLS);

# E coli mature peptide GFF record
#NC_000913.2	RefSeq	mat_peptide	8241	9188	.	+	.	ID=NC_000913.2:talB:unknown_transcript_2;
#Parent=NC_000913.2:talB;locus_tag=b0008;gene_synonym=ECK0008;gene_synonym=JW0007;gene_synonym=yaaK;product=transaldolase B;
#experiment=N-terminus verified by Edman degradation: PMID 8740179%2C9298646

# Printing the GFF file for Artemis
$YYctr=$YNctr=$Y1ctr=$Y2ctr=$ctr=0;
foreach $i (@gff){
	my ($pstart,$pend,$mpstart,$mpend);
	# both methods predict and same cleavage site
	if (($preds[$ctr][2] eq 'Y') && ($preds[$ctr][3] eq 'S') && ($preds[$ctr][1]==$preds[$ctr][4])){
		print OUTGFF "NC_012985.2\tRefSeq\tmat_peptide";
		#if + strand
		if ($gff[$ctr][2] eq '+'){
			$pstart=$gff[$ctr][0];
			$mpend=$gff[$ctr][1];
			$mpstart=$pstart+($preds[$ctr][1]*3)-1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t+\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-HMM:3.0\;inference=ab initio prediction:SignalP-Neural Net:3.0\n";
		}
		# if - strand
		elsif ($gff[$ctr][2] eq '-'){
			$mpstart=$gff[$ctr][0];
			$pend=$gff[$ctr][1];
			$mpend=$pend-($preds[$ctr][1]*3)+1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t-\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-HMM:3.0\;inference=ab initio prediction:SignalP-Neural Net:3.0\n";
		}

		# chk is myristolation candidate and write out if so
		if(mys_cand($prots[$ctr],$preds[$ctr][1])){
			$j=$pnames[$ctr][1];
			$j=~ s/\.1//;
			print OUTCANDS "\>$j\|Both_pred\n";
			print OUTCANDS substr($prots[$ctr],$preds[$ctr][1]-1),"\n"; 
		}
		
		$YYctr++;
	}
	#both methods predict but diff cleavage sites
	elsif (($preds[$ctr][2] eq 'Y') && ($preds[$ctr][3] eq 'S') && ($preds[$ctr][1]!=$preds[$ctr][4])){
		print OUTGFF "NC_012985.2\tRefSeq\tmat_peptide";
		#if + strand
		if ($gff[$ctr][2] eq '+'){
			$pstart=$gff[$ctr][0];
			$mpend=$gff[$ctr][1];
			$mpstart=$pstart+($preds[$ctr][1]*3)-1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t+\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-Neural Net:3.0\n";
		}
		# if - strand
		elsif ($gff[$ctr][2] eq '-'){
			$mpstart=$gff[$ctr][0];
			$pend=$gff[$ctr][1];
			$mpend=$pend-($preds[$ctr][1]*3)+1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t-\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-Neural Net:3.0\n";
		}
		
		# chk is myristolation candidate and write out if so
		if(mys_cand($prots[$ctr],$preds[$ctr][1])){
			$j=$pnames[$ctr][1];
			$j=~ s/\.1//;
			print OUTCANDS "\>$j\|NN_pred\n";
			print OUTCANDS substr($prots[$ctr],$preds[$ctr][1]-1),"\n"; 
		}
		
		print OUTGFF "NC_012985.2\tRefSeq\tmat_peptide";
		#if + strand
		if ($gff[$ctr][2] eq '+'){
			$pstart=$gff[$ctr][0];
			$mpend=$gff[$ctr][1];
			$mpstart=$pstart+($preds[$ctr][4]*3)-1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t+\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-HMM:3.0\n";
		}
		# if - strand
		elsif ($gff[$ctr][2] eq '-'){
			$mpstart=$gff[$ctr][0];
			$pend=$gff[$ctr][1];
			$mpend=$pend-($preds[$ctr][4]*3)+1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t-\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-HMM:3.0\n";
		}
		
		# chk is myristolation candidate and write out if so
		if(mys_cand($prots[$ctr],$preds[$ctr][4])){
			$j=$pnames[$ctr][1];
			$j=~ s/\.1//;
			print OUTCANDS "\>$j\|HMM_pred\n";
			print OUTCANDS substr($prots[$ctr],$preds[$ctr][4]-1),"\n"; 
		}		
		
		$YNctr++;
	}
	#only NN method predicts	
	elsif (($preds[$ctr][2] eq 'Y') && ($preds[$ctr][3] eq 'Q')){
		print OUTGFF "NC_012985.2\tRefSeq\tmat_peptide";
		#if + strand
		if ($gff[$ctr][2] eq '+'){
			$pstart=$gff[$ctr][0];
			$mpend=$gff[$ctr][1];
			$mpstart=$pstart+($preds[$ctr][1]*3)-1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t+\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-Neural Net:3.0\n";
		}
		# if - strand
		elsif ($gff[$ctr][2] eq '-'){
			$mpstart=$gff[$ctr][0];
			$pend=$gff[$ctr][1];
			$mpend=$pend-($preds[$ctr][1]*3)+1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t-\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-Neural Net:3.0\n";
		}
		
		# chk is myristolation candidate and write out if so
		if(mys_cand($prots[$ctr],$preds[$ctr][1])){
			$j=$pnames[$ctr][1];
			$j=~ s/\.1//;
			print OUTCANDS "\>$j\|NN_pred\n";
			print OUTCANDS substr($prots[$ctr],$preds[$ctr][1]-1),"\n"; 
		}		
		
		$Y1ctr++;
	}
	#only HMM method predicts	
	elsif (($preds[$ctr][2] eq 'N') && ($preds[$ctr][3] eq 'S')){
		print OUTGFF "NC_012985.2\tRefSeq\tmat_peptide";
		#if + strand
		if ($gff[$ctr][2] eq '+'){
			$pstart=$gff[$ctr][0];
			$mpend=$gff[$ctr][1];
			$mpstart=$pstart+($preds[$ctr][4]*3)-1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t+\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-HMM:3.0\n";
		}
		# if - strand
		elsif ($gff[$ctr][2] eq '-'){
			$mpstart=$gff[$ctr][0];
			$pend=$gff[$ctr][1];
			$mpend=$pend-($preds[$ctr][4]*3)+1;
			print OUTGFF "\t$mpstart\t$mpend\t.\t-\t.\t$gff[$ctr][3]\;inference=ab initio prediction:SignalP-HMM:3.0\n";
		}
		
		# chk is myristolation candidate and write out if so
		if(mys_cand($prots[$ctr],$preds[$ctr][4])){
			$j=$pnames[$ctr][1];
			$j=~ s/\.1//;
			print OUTCANDS "\>$j\|HMM_pred\n";
			print OUTCANDS substr($prots[$ctr],$preds[$ctr][4]-1),"\n"; 
		}		
		
		$Y2ctr++;
	}
	else{
		# chk is myristolation candidate and write out if so
		if(mys_cand($prots[$ctr],1)){
			$j=$pnames[$ctr][1];
			$j=~ s/\.1//;
			print OUTCANDS "\>$j\|Not_signalpeptide\n$prots[$ctr]\n"; 
		}		
	}
	$ctr++;
}
close(OUTGFF);

print STDERR "Summary\nNN+HMM Preds: $YYctr\tNN!=HMM Preds: $YNctr\nNN Preds: $Y1ctr\t\tHMM Preds: $Y2ctr\n";